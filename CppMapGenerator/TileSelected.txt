Renderer.1 {
    BackgroundColor = rgb(80, 80, 80);
    TextureBackground = None;
}

Renderer.2 {
    TextColor = rgb(190, 190, 190);
    TextColorHover = rgb(250, 250, 250);
    Texture = "themes/Black.png" Part(50, 22, 45, 50) Middle(10, 0) Smooth;
    TextureDisabled = None;
    TextureDown = "themes/Black.png" Part(0, 74, 45, 50) Middle(10, 0) Smooth;
    TextureDownFocused = None;
    TextureDownHover = None;
    TextureFocused = "themes/Black.png" Part(47, 74, 45, 50) Middle(10, 0) Smooth;
    TextureHover = "themes/Black.png" Part(0, 126, 45, 50) Middle(10, 0) Smooth;
}

Panel.PanelLeft {
    Renderer = &1;
    Size = (15%, 100%);

    Button.ChangeTileTypeButton {
        Position = ((parent.innersize - size) / 2, ((parent.innersize - size) * 1) / 8);
        Renderer = &2;
        Text = "Change Tile Type";
        TextSize = 10;
    }

    Button.ChangePlacedMonstertButton {
        Position = ((parent.innersize - size) / 2, ((parent.innersize - size) * 2) / 8);
        Renderer = &2;
        Text = "Change Placed Monster";
        TextSize = 9;
    }

    Button.EditInventoryButton {
        Position = ((parent.innersize - size) / 2, ((parent.innersize - size) * 5) / 8);
        Renderer = &2;
        Text = "Edit Inventory";
        TextSize = 13;
    }

    Button.ShowItemInfoButton {
        Position = ((parent.innersize - size) / 2, ((parent.innersize - size) * 6) / 8);
        Renderer = &2;
        Text = "Show Item Info";
        TextSize = 13;
    }

    Button.PlaceChestButton {
        Position = ((parent.innersize - size) / 2, ((parent.innersize - size) * 4) / 8);
        Renderer = &2;
        Text = "Place Chest";
        TextSize = 13;
    }

    Button.ExitButton {
        Position = ((parent.innersize - size) / 2, ((parent.innersize - size) * 7) / 8);
        Renderer = &2;
        Text = Exit;
        TextSize = 13;
    }

    Button.ConfirmButton {
        Position = ((parent.innersize - size) / 2, ((parent.innersize - size) * 3) / 8);
        Renderer = &2;
        Text = Confirm;
        TextSize = 13;
    }
}

Panel.PanelRight {
    Position = (85%, 0);
    Renderer = &1;
    Size = (15%, 100%);

    ListBox.ListsBox {
        ItemHeight = 20;
        MaximumItems = 0;
        Position = (5%, 10%);
        Size = (90%, 60%);
        TextSize = 13;

        Renderer {
            BackgroundColorHover = rgb(100, 100, 100);
            Padding = (3, 3, 3, 3);
            SelectedBackgroundColor = rgb( 10, 110, 255);
            SelectedBackgroundColorHover = rgb(30, 150, 255);
            SelectedTextColor = White;
            TextColor = rgb(190, 190, 190);
            TextColorHover = rgb(250, 250, 250);
            TextureBackground = "themes/Black.png" Part(0, 22, 48, 48) Middle(16) Smooth;

            Scrollbar {
                TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
            }
        }
    }

    Picture.Picture {
        Position = ((parent.innersize - size) / 2, ((parent.innersize - size) * 9) / 10);
        Size = (100, 100);

        Renderer {
            Texture = None;
        }
    }

    Label.TypeLabel {
        AutoSize = true;
        Position = ((parent.innersize - size) / 2, 3%);
        Size = (3.2, 18);
        TextSize = 13;

        Renderer {
            TextColor = rgb(190, 190, 190);
            TextureBackground = None;

            Scrollbar {
                TextureArrowDown = "themes/Black.png" Part(0, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                TextureArrowDownHover = "themes/Black.png" Part(22, 0, 20, 20) Middle(0, 1, 20, 19) Smooth;
                TextureArrowUp = "themes/Black.png" Part(44, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                TextureArrowUpHover = "themes/Black.png" Part(66, 0, 20, 20) Middle(0, 0, 20, 19) Smooth;
                TextureThumb = "themes/Black.png" Part(68, 465, 20, 20) Smooth;
                TextureThumbHover = "themes/Black.png" Part(90, 465, 20, 20) Smooth;
                TextureTrack = "themes/Black.png" Part(0, 499, 20, 20) Smooth;
                TextureTrackHover = "themes/Black.png" Part(22, 499, 20, 20) Smooth;
            }
        }
    }
}
